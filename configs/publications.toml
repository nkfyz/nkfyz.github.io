years = ["2023", "2022", "2021", "2020"]

myname = ["Yaozheng Fang", "Fang Yaozheng"]

[[publications]]
title = "PaVM: A Parallel Virtual Machine for Smart Contract Execution and Validation"
authors = "Yaozheng Fang, Zhiyuan Zhou, Surong Dai, Jinni Yang, Hui Zhang, Ye Lu"
publisher = "IEEE Transactions on Parallel and Distributed Systems"
publisher_site = "https://www.computer.org/csdl/journal/td"
cite_text = ""
online_site = ""
abstract = "The performance bottleneck of blockchain has shifted from consensus to serial smart contract execution in transaction validation. Previous works predominantly focus on intercontract parallel execution, but they fail to address the inherent limitations of each smart contract execution performance. In this paper, we propose PaVM, the first smart contract virtual machine that supports both inter-contract and intra-contract parallel execution to accelerate the validation process. PaVM consists of (1) key instructions for precisely recording entire runtime information at the instruction level, (2) a runtime system with a re-designed machine state and thread management to facilitate parallel execution, and (3) a read/write-operation-based receipt generation method to ensure both the correctness of operations and the consistency of blockchain data. We evaluate PaVM on the Ethereum testnet, demonstrating that it can outperform the mainstream blockchain client Geth. Our evaluation results reveal that PaVM speeds up overall validation performance by 33.4×, and enhances validation throughput by up to 46×."
pdf_name = "/pdf/pavm.pdf" 
year = "2023"

[[publications]]
title = "DRS: A Deep Reinforcement Learning enhanced Kubernetes Scheduler for Microservice-based System"
authors = "Zhaolong Jian, Xueshuo Xie, Yaozheng Fang, Yibing Jiang, Ye Lu, Ankan Dash, Tao Li, Guiling Wang"
publisher = "Software: Practice and Experience"
publisher_site = "https://onlinelibrary.wiley.com/journal/1097024x"
cite_text = "Jian Z, Xie X, Fang Y, et al. DRS: A Deep Reinforcement Learning enhanced Kubernetes Scheduler for Microservice-based System[J]. 2023."
bibtex = "@article{jian2023drs,\ntitle={DRS: A Deep Reinforcement Learning enhanced Kubernetes Scheduler for Microservice-based System},\nauthor={Jian, Zhaolong and Xie, Xueshuo and Fang, Yaozheng and Jiang, Yibing and Li, Tao and Lu, Ye},\nyear={2023}\n}"
online_site = "https://onlinelibrary.wiley.com/doi/10.1002/spe.3284"
abstract = "Recently, Kubernetes is widely used to manage and schedule the resources of microservices in cloud-native distributed applications, as the most famous container orchestration framework. However, Kubernetes preferentially schedules microservices to nodes with rich and balanced CPU and memory resources on a single node. The native scheduler of Kubernetes, called Kube-scheduler, may cause resource fragmentation and decrease resource utilization. In this paper, we propose a deep reinforcement learning enhanced Kubernetes scheduler named DRS. To improve resource utilization and reduce load imbalance, we first present the Kubernetes scheduling problem as a Markov decision process and elaborately designed the state, action, and reward. Then, we design and implement DRS mointor to perceive six metrics about resource utilization to construct a comprehensive global resource view. Finally, DRS can automatically learn the scheduling policy through interaction with the Kubernetes cluster, without relying on expert knowledge about workload and cluster status. We implement a prototype of DRS in a Kubernetes cluster with five nodes and evaluate its performance. Experimental results highlight that DRS overcomes the shortcomings of Kube-scheduler and achieve the expected scheduling target with three workloads. Compared with Kube-scheduler, DRS brings an improvement of 27.29% in resource utilization and reduce the load imbalance by 2 .90× on average, with only 3.27% CPU overhead and 0.648% communication latency."
pdf_name = "/pdf/drs.pdf" 
year = "2023"

[[publications]]
title = "TSC-VEE: A TrustZone-Based Smart Contract Virtual Execution Environment"
authors = "Zhaolong Jian, Ye Lu, Youyang Qiao, Yaozheng Fang, Xueshuo Xie, Dayi Yang, Zhiyuan Zhou, Tao Li"
publisher = "IEEE Transactions on Parallel and Distributed Systems"
publisher_site = "https://www.computer.org/csdl/journal/td"
cite_text = "Jian Z, Lu Y, Qiao Y, et al. TSC-VEE: A TrustZone-Based Smart Contract Virtual Execution Environment[J]. IEEE Transactions on Parallel and Distributed Systems, 2023."
bibtex = "@article{jian2023tsc,\n  title={TSC-VEE: A TrustZone-Based Smart Contract Virtual Execution Environment},\n  author={Jian, Zhaolong and Lu, Ye and Qiao, Youyang and Fang, Yaozheng and Xie, Xueshuo and Yang, Dayi and Zhou, Zhiyuan and Li, Tao},\n  journal={IEEE Transactions on Parallel and Distributed Systems},\n  year={2023},\n  publisher={IEEE}\n}"
online_site = "https://ieeexplore.ieee.org/abstract/document/10094016/"
abstract = "TrustZone as a trusted execution environment (TEE) has been proven to preserve the confidentiality of blockchain transactions supported by smart contracts. Despite some academic effort, TrustZone can only support limited languages for now. The lack of the corresponding execution environment for smart contracts seriously hinders blockchain applications from directly running on TrustZone. In this paper, we design the first virtual execution environment named TSC-VEE for performing Solidity smart contracts on TrustZone, to the best of our knowledge. TSC-VEE can be decomposed into fourfold: (1) an instruction set adapted to the isolation and world switching mechanism of TrustZone. (2) a runtime memory management mechanism that provides a pair of instructions with the corresponding processing mechanism to allocate and release the work memory. (3) a hybrid granularity resource analysis algorithm which computes and records the value of maximum stack height and static gas cost through bytecode pre-execution, avoiding runtime overflow and invalid computations. (4) a cross-isolation-environment prefetching approach that supports loading and storing the storage data from the normal world into the secure world on TrustZone before execution, thus avoiding switching the world state frequently at runtime. Extensive experimental results show that TSC-VEE can perform smart contracts correctly and efficiently on TrustZone. Compared with the most commonly used Ethereum client— Geth , TSC-VEE achieves execution performance improvements by $9.29\times$ . We also implement the Ethereum virtual machine— evmone on TrustZone. TSC-VEE can reduce the latency by 12.63% with our optimization techniques, and decrease the work memory footprint by 22.95% on average when executing various scale contracts."
pdf_name = "/pdf/tsc_vee.pdf" 
year = "2023"

[[publications]]
title = "SmartVM: a smart contract virtual machine for fast on-chain DNN computations"
authors = "Yaozheng Fang, Tao Li, Ye Lu*, Jinni Yang, Zhaolong Jian, Zhiguo Wan, Yusen Li"
publisher = "IEEE Transactions on Parallel and Distributed Systems"
publisher_site = "https://www.computer.org/csdl/journal/td"
cite_text = "Li, T., Fang, Y., Lu, Y., Yang, J., Jian, Z., Wan, Z., & Li, Y. (2022). SmartVM: a smart contract virtual machine for fast on-chain DNN computations. IEEE Transactions on Parallel and Distributed Systems, 33(12), 4100-4116."
bibtex = "@article{li2022smartvm,\n  title={SmartVM: a smart contract virtual machine for fast on-chain DNN computations},\n  author={Li, Tao and Fang, Yaozheng and Lu, Ye and Yang, Jinni and Jian, Zhaolong and Wan, Zhiguo and Li, Yusen},\n  journal={IEEE Transactions on Parallel and Distributed Systems},\n  volume={33},\n  number={12},\n  pages={4100--4116},\n  year={2022},\n  publisher={IEEE}\n}"
online_site = "https://ieeexplore.ieee.org/abstract/document/9780577"
abstract = "Blockchain-based artificial intelligence (BC-AI) has been applied for protecting deep neural network (DNN) data from being tampered with, which is expected to further boost trusted distributed AI applications in many fields. However, due to smart contract execution environment architectural defects, it is challenging for previous BC-AI systems to support computing-intensive tasks on-chain performing such as DNN convolution operations. They have to offload computations and a large amount of data from blockchain to off-chain platforms to execute smart contracts as native code. This failure to take advantage of data locality has become one of the major critical performance bottlenecks in BC-AI system. To this end, in this article, we propose SmartVM with optimization methods to support on-chain DNN inference for BC-AI system. The key idea is to design and optimize the computing mechanism and storage structure of smart contract execution environment according to the characteristics of DNN such as high computational parallelism and large data volume. We decompose SmartVM into three components: 1) a compact DNN-oriented instruction set to describe computations in a short number of instructions to reduce interpretation time. 2) a memory management mechanism to make SmartVM memory dynamic free/allocated according to the size of DNN feature maps. 3) a block-based weight prefetching and parallel computing method to organize each layer's computing and weights prefetching in a pipelined manner. We perform the typical image classification in a private Ethereum blockchain testbed to evaluate SmartVM performance. Experimental results highlight that SmartVM can support DNN inference on-chain with roughly the same efficiency against the native code execution. Compared with the traditional off-chain computing, SmartVM can speed up the overall execution by 70× , 16× , 11× , and 12× over LeNet5, AlexNet, ResNet18, and MobileNet, respectively. The memory footprint can be reduced by 84% , 90.8% , 94.3% , and 93.7% over the above four models, while offering the same level model accuracy. This article sheds light on the design space of the smart contract virtual machine for DNN computation and is promising to further boost BC-AI applications."
pdf_name = "/pdf/smartvm.pdf" 
year = "2022"
slides_cn = "/pdf/SmartVM_slides_zh.pdf"

[[publications]]
title = "Block-gram: Mining Knowledgeable Features for Smart Contract Vulnerability Detection"
authors = "Tao Li, Haolong Wang, Yaozheng Fang, Zhaolong Jian, Zichun Wang, Xueshuo Xie"
publisher = "Smart Computing and Communication (SmartCom 2022)"
publisher_site = "https://link.springer.com/book/10.1007/978-3-031-28124-2"
cite_text = "Li, T., Wang, H., Fang, Y., Jian, Z., Wang, Z., Xie, X. (2023). Block-gram: Mining Knowledgeable Features for Smart Contract Vulnerability Detection. In: Qiu, M., Lu, Z., Zhang, C. (eds) Smart Computing and Communication. SmartCom 2022. Lecture Notes in Computer Science, vol 13828. Springer, Cham. https://doi.org/10.1007/978-3-031-28124-2_52"
bibtex = "@inproceedings{li2022block,\n  title={Block-gram: Mining Knowledgeable Features for Smart Contract Vulnerability Detection},\n  author={Li, Tao and Wang, Haolong and Fang, Yaozheng and Jian, Zhaolong and Wang, Zichun and Xie, Xueshuo},\n  booktitle={International Conference on Smart Computing and Communication},\n  pages={546--557},\n  year={2022},\n  organization={Springer}\n}"
online_site = "https://link.springer.com/chapter/10.1007/978-3-031-28124-2_52"
abstract = "Effective vulnerability detection of large-scale smart contracts is critical because smart contract attacks frequently bring about tremendous economic loss. However, code analysis requiring traversal paths and learning methods requiring many features training is too time-consuming to detect large-scale on-chain contracts. This paper focuses on improving detection efficiency by reducing the dimension of the features, combined with expert knowledge. We propose a feature extraction method Block-gram to form low-dimensional knowledgeable features from the bytecode. We first separate the metadata and convert the runtime code to opcode sequence, dividing the opcode sequence into segments according to some instructions (jump, etc.). Then, we mine extensible Block-gram features for learning-based model training, consisting of 4-dimensional block features and 8-dimensional attribute features. We evaluate these knowledge-based features using seven state-of-the-art learning algorithms to show that the average detection latency speeds up 25 to 650 times, compared with the features extracted by N-gram."
pdf_name = "/pdf/block_gram.pdf" 
year = "2022"

[[publications]]
title = "ATOM: Architectural Support and Optimization Mechanism for Smart Contract Fast Update and Execution in Blockchain-Based IoT"
authors = "Yaozheng Fang, Tao Li, Zhaolong Jian, Xueshuo Xie, Ye Lu*, Guiling Wang"
publisher = "IEEE Internet of Things Journal"
publisher_site = "https://ieee-iotj.org/"
cite_text = "T. Li, Y. Fang, Z. Jian, X. Xie, Y. Lu and G. Wang, ATOM: Architectural Support and Optimization Mechanism for Smart Contract Fast Update and Execution in Blockchain-Based IoT, in IEEE Internet of Things Journal, vol. 9, no. 11, pp. 7959-7971, 1 June1, 2022, doi: 10.1109/JIOT.2021.3106942."
bibtex = "@article{li2021atom,\n  title={ATOM: Architectural support and optimization mechanism for smart contract fast update and execution in blockchain-based IoT},\n  author={Li, Tao and Fang, Yaozheng and Jian, Zhaolong and Xie, Xueshuo and Lu, Ye and Wang, Guiling},\n  journal={IEEE Internet of Things Journal},\n  volume={9},\n  number={11},\n  pages={7959--7971},\n  year={2021},\n  publisher={IEEE}\n}"
online_site = "https://ieeexplore.ieee.org/abstract/document/9520821"
abstract = "Blockchain-based Internet of Things (BC-IoT) brings the advantages of blockchain into traditional IoT systems. In BC-IoT, the smart contract has been widely used for automatic, trusted, and decentralized applications. Smart contracts require frequent adjust and fast update due to various reasons, such as inevitable code bugs, changes of applications, or security requirements. However, previous smart contract architecture and updating mechanism are low speed and cause high overhead, because they are based on recompilation and redeployment in BC-IoT. Meanwhile, smart contract execution is so time consuming due to contract instruction dispatching and operand loading in the stack-based Ethereum virtual machine (EVM). To address these issues, we propose a new smart contract architecture and optimization mechanism for BC-IoTs, ATOM, which provides architectural supports to update contract economically and fast executing in instructionwise for the first time, to the best of our knowledge. We design a compact Application-oriented Instruction (AoI) set to describe application operations. We can construct the bytecode of smart contract from application by directly assembling templates prebuilt upon the AoIs rather than by compilation. We also present an optimized mechanism for AoI execution to enable access addressable storage place rather than the indirect access through stack. We perform ATOM on a BC-IoT testbed based on private Ethereum and Hyperledger Burrow. The experimental results highlight that ATOM is more efficient than state-of-the-art approaches. ATOM can reduce update latency by 62.7%, ledger size by 70%, and gas usage by 90% on average, respectively. Compared with the traditional smart contract architecture, ATOM can improve EVM Memory access efficiency significantly by up to 10× and achieve improvement of execution efficiency with up to 1.6× ."
pdf_name = "/pdf/atom.pdf" 
year = "2021"
slides_cn = "/pdf/ATOM_zh-cn.pdf"

[[publications]]
title = "Fast Policy Interpretation and Dynamic Conflict Resolution for Blockchain-Based IoT System"
authors = "Yaozheng Fang, Zhaolong Jian, Zongming Jin, Xueshuo Xie, Ye Lu, Tao Li"
publisher = "Wireless Communications and Mobile Computing"
publisher_site = "https://www.hindawi.com/journals/wcmc/"
cite_text = "Yaozheng Fang, Zhaolong Jian, Zongming Jin, Xueshuo Xie, Ye Lu, Tao Li, Fast Policy Interpretation and Dynamic Conflict Resolution for Blockchain-Based IoT System, Wireless Communications and Mobile Computing, vol. 2021, Article ID 9968743, 14 pages, 2021. https://doi.org/10.1155/2021/9968743"
bibtex = "@article{fang2021fast,\n  title={Fast policy interpretation and dynamic conflict resolution for blockchain-based IoT system},\n  author={Fang, Yaozheng and Jian, Zhaolong and Jin, Zongming and Xie, Xueshuo and Lu, Ye and Li, Tao},\n  journal={Wireless Communications and Mobile Computing},\n  volume={2021},\n  pages={1--14},\n  year={2021},\n  publisher={Hindawi Limited}\n}"
online_site = "https://www.hindawi.com/journals/wcmc/2021/9968743/"
abstract = "Although the blockchain-based Internet of Things (BC-IoT) has been applied in many fields, it still faces many security attacks due to lacking policy-based security management (PbSM). Previous PbSM is usually time-consuming, which is difficult to integrate into BC-IoT directly. The high-latency policy conflict resolving in traditional PbSM cannot meet the BC-IoT’s low-latency requirement. Moreover, the conflict resolution rate is low as the PbSM usually neglects the runtime information. Therefore, it is challenging that achieving an efficient PbSM for BC-IoT and overcomes both time and resource consumption. To address the problem, we propose a novel PbSM for BC-IoT named FPICR to realize fast policy interpretation and dynamic conflict resolution efficiently. We first present policy templates based on system log to interpret policy in high speed in BC-IoT. Benefiting from matching the characteristics of the system processing, FPICR supports interpreting a policy into the smart contract directly without complex content parsing. We then propose a weighted directed policy graph (WDPG) to evaluate the importance of the deployed policies more accurately. To improve the policy conflict resolution rate, we implement the resolution algorithm through reconstructing the WDPG. Taking the traits of these properties, FPICR thus can also remove the redundant data to compress storage space by the WDPG. Experiment results highlight that FPICR outperforms the baseline in all measure metrics. Especially, compared with the state-of-the-art method, the speedup of interpretation in FPICR is about up to . The conflict resolution rate in FPICR can be improved by 6.2% on average and achieve up to 96.1%."
pdf_name = "/pdf/fpicr.pdf" 
year = "2021"

[[publications]]
title = "AWAP: Adaptive weighted attribute propagation enhanced community detection model for bitcoin de-anonymization"
authors = "Xie Xueshuo, Wang Jiming, Ye Junyi, Fang Yaozheng, Lu Ye, Li Tao, Wang Guiling"
publisher = "Applied Soft Computing"
publisher_site = "https://www.sciencedirect.com/journal/applied-soft-computing"
cite_text = "Xueshuo X, Jiming W, Junyi Y, et al. AWAP: Adaptive weighted attribute propagation enhanced community detection model for bitcoin de-anonymization[J]. Applied Soft Computing, 2021, 109: 107507."
bibtex = "@article{xueshuo2021awap,\n  title={AWAP: Adaptive weighted attribute propagation enhanced community detection model for bitcoin de-anonymization},\n  author={Xueshuo, Xie and Jiming, Wang and Junyi, Ye and Yaozheng, Fang and Ye, Lu and Tao, Li and Guiling, Wang},\n  journal={Applied Soft Computing},\n  volume={109},\n  pages={107507},\n  year={2021},\n  publisher={Elsevier}\n}"
online_site = "https://www.sciencedirect.com/science/article/abs/pii/S1568494621004300"
abstract = "Bitcoin is a kind of decentralized cryptocurrency and widely used in online payment partially for its anonymity mechanism. The anonymity, however, also attracts the usage of cryptocurrency by criminals in ransomware and money laundering, and limits its further application and development. In this paper, we aim to improve Bitcoin’s auditability with de-anonymization. Many previous studies have used heuristic clustering or supervised machine learning to analyze the historical transactions for identifying user behaviors. However, heuristic clustering only considers the topological structure of the transaction graph and ignores the transaction attributes. While supervised learning is usually limited by the size of labeled datasets, resulting in an unsatisfactory accuracy. To resolve the above problems, we propose an Adaptive Weighted Attribute Propagation enhanced community detection model, named AWAP, which considers both the transaction’s topological structure and the transaction attributes. We first parse the transaction data from the public ledger and construct a bipartite graph to describe correlations between addresses and transactions. Then, we use a five-step feature engineering pipeline to extract Bitcoin address attributes and build an attribute graph. Finally, we design an adaptive weighted attribute propagation algorithm running on the attribute graph to classify the Bitcoin addresses and identify user behaviors. Extensive experiments highlight that AWAP model achieves 12% higher accuracy and 25% higher F-score on average, compared to the state-of-the-art Bitcoin address classifiers and other community detection algorithms. To evaluate the effectiveness of AWAP, we also present two case studies on Bitcoin address classification and Bitcoin trace-ability in ransomware."
pdf_name = "/pdf/awap.pdf" 
year = "2021"

[[publications]]
title = "Trusted-DNN: A TrustZone-based Adaptive Isolation Strategy for Deep Neural Networks"
authors = "Zhuang Liu, Ye Lu, Xueshuo Xie, Yaozheng Fang, Zhaolong Jian, Tao Li"
publisher = "Proceedings of the ACM Turing Award Celebration Conference (ACM TURC '21)"
publisher_site = "https://dl.acm.org/doi/proceedings/10.1145/3472634"
cite_text = "Zhuang Liu, Ye Lu, Xueshuo Xie, Yaozheng Fang, Zhaolong Jian, and Tao Li. 2021. Trusted-DNN: A TrustZone-based Adaptive Isolation Strategy for Deep Neural Networks. In Proceedings of the ACM Turing Award Celebration Conference - China (ACM TURC '21). Association for Computing Machinery, New York, NY, USA, 67–71. https://doi.org/10.1145/3472634.3472652"
bibtex = "@inproceedings{liu2021trusted,\n  title={Trusted-dnn: A trustzone-based adaptive isolation strategy for deep neural networks},\n  author={Liu, Zhuang and Lu, Ye and Xie, Xueshuo and Fang, Yaozheng and Jian, Zhaolong and Li, Tao},\n  booktitle={Proceedings of the ACM Turing Award Celebration Conference-China},\n  pages={67--71},\n  year={2021}\n}"
online_site = "https://dl.acm.org/doi/abs/10.1145/3472634.3472652"
abstract = "Deep neural network (DNN) models have been widely deployed on embedded and mobile devices in lots of application fields such as health care, face recognition, driver assistance, etc. These applications usually require privacy or trusted computing protection. However, diverse hardware resources, various transport protocols, and limited computation and storage capacity make it challenging for traditional embedded systems to provide complex security protection mechanism oriented DNN models. To meet the challenges, we propose Trusted-DNN, a TrustZone-based adaptive isolation strategy for DNN models. We first design a normal pattern to exploit TrustZone technology to provide overall protection for running DNNs. To deploy arbitrary DNN models into TrustZone, we then develop a dynamic model partition method, which makes our strategy easily adaptive to various DNN models and devices. Finally, we employ several optimization techniques to reduce the inference latency of Trusted-DNN models. We perform AlexNet on OP-TEE, which is a TrustZone-based secure operating system, based on a Raspberry Pi 3B+ board. The extensive experimental results highlight that the optimized Trusted-DNN can reduce memory footprint by up to 98% compared with the ordinary program and Trusted-DNN only increase inference latency by 22.8%. Our code is available at https://gitee.com/PaintZero/alexnet-tee."
pdf_name = "/pdf/trusted_dnn.pdf" 
year = "2021"

[[publications]]
title = "WIP: Sysnif: Constructing Workflow from Interleaved Logs in Intelligent IoT System"
authors = "Zongming Jin, Xueshuo Xie, Yaozheng Fang, Zhaolong Jian, Ye Lu, Guangying Li"
publisher = "2021 IEEE 22nd International Symposium on a World of Wireless, Mobile and Multimedia Networks (WoWMoM)"
publisher_site = "https://ieeexplore.ieee.org/xpl/conhome/9469409/proceeding"
cite_text = "Z. Jin, X. Xie, Y. Fang, Z. Jian, Y. Lu and G. Li, WIP: Sysnif: Constructing Workflow from Interleaved Logs in Intelligent IoT System, 2021 IEEE 22nd International Symposium on a World of Wireless, Mobile and Multimedia Networks (WoWMoM), Pisa, Italy, 2021, pp. 264-267, doi: 10.1109/WoWMoM51794.2021.00049."
bibtex = "@inproceedings{jin2021wip,\n  title={WIP: Sysnif: Constructing Workflow from Interleaved Logs in Intelligent IoT System},\n  author={Jin, Zongming and Xie, Xueshuo and Fang, Yaozheng and Jian, Zhaolong and Lu, Ye and Li, Guangying},\n  booktitle={2021 IEEE 22nd International Symposium on a World of Wireless, Mobile and Multimedia Networks (WoWMoM)},\n  pages={264--267},\n  year={2021},\n  organization={IEEE}\n}"
online_site = "https://ieeexplore.ieee.org/abstract/document/9469470"
abstract = "The massive smart devices in intelligent IoT can be broken due to malicious attacks and system failures. As a nonintrusive method, workflows mined from system logs facilitate administrators to quickly locate and diagnose anomalies in time. System logs are usually interleaved since there are lots of concurrent and asynchronous operations and executions on large scale IoT devices. Consequently, it is so challenging to construct an adaptive workflow from these logs and realize the real-time anomaly detection. To meet this challenge, in this paper, we propose a two-stage workflow construction approach named Sysnif, which includes offline construction and online adjustment. First, the window-based dependence computing method is employed to obtain the context of execution paths. Second, a weight-greedy algorithm is designed to denoise the interleaved system logs effectively. Third, in order to match system mechanism variation, the online micro-iteration adjusting algorithm is presented to update the workflow model. Experiment results highlight that Sysnif can outperform state-of-the-art methods, such as Logsed, on dataset of OpenStack logs by 22.4% on recall, meanwhile maintaining the same precision roughly. Sysnif can achieve an average precision and recall of 93.8% and 94.7%, respectively."
pdf_name = "/pdf/wip_sysnif.pdf" 
year = "2021"

[[publications]]
title = "Blockchain-driven anomaly detection framework on edge intelligence"
authors = "Xueshuo Xie, Yaozheng Fang, Zhaolong Jian, Ye Lu, Tao Li, Guiling Wang"
publisher = "CCF Transactions on Networking"
publisher_site = "https://link.springer.com/journal/42045/volumes-and-issues"
cite_text = "Xie, X., Fang, Y., Jian, Z. et al. Blockchain-driven anomaly detection framework on edge intelligence. CCF Trans. Netw. 3, 171–192 (2020). https://doi.org/10.1007/s42045-020-00044-9"
bibtex = "@article{xie2020blockchain,\n  title={Blockchain-driven anomaly detection framework on edge intelligence},\n  author={Xie, Xueshuo and Fang, Yaozheng and Jian, Zhaolong and Lu, Ye and Li, Tao and Wang, Guiling},\n  journal={CCF Transactions on Networking},\n  volume={3},\n  pages={171--192},\n  year={2020},\n  publisher={Springer}\n}"
online_site = "https://link.springer.com/article/10.1007/s42045-020-00044-9"
abstract = "There are a large number of end devices in an IoT system, which may malfunction due to various reasons, such as being attacked. Anomaly detection of the devices and the whole IoT system normally rely on the analysis of the huge amount of log records generated by the end devices. How to protect the log records from being tampered with and realize the real-time anomaly detection is a challenging task which is still not addressed. Existing works on anomaly detection by the emerging and effective deep learning algorithms require the transfer of log data to cloud servers which incurs high communication overhead and long detection latency, and is subject to the risk of being tampered. In this paper, we propose a novel and efficient hierarchical framework for online anomaly detection in IoT systems atop Blockchain and smart contracts. At the device layer of the hierarchical framework, an efficient feature extractor is developed to preprocess the raw log data which greatly reduces the size of data to be transferred while keeps sufficient information for the anomaly detection model to use. At the cloud layer of the framework, deep learning models use the processed data from the device layer to build the detection model and output normal workflow patterns. In the edge layer of the framework, a permissioned blockchain is built and a series of smart contracts are developed which can guarantee data integrity and achieve automatic anomaly detection based on the model output from the cloud layer. Extensive experiments demonstrate that our framework can reduce the ledger size by 7.1% without detection accuracy reduction compared with traditional centralized solutions and the detection latency is only 0.47ms in our prototype. Our feature extractor can speed up by 3.6x–7.3x times on the execution time with almost the same CPU usage rate compared with state-of-the-art log parsers and encryption solutions, such as AES and RSA."
pdf_name = "/pdf/ccf_ton.pdf" 
year = "2020"

[[publications]]
title = "Attribute Propagation Enhanced Community Detection Model for Bitcoin De-anonymizing"
authors = "Jiming Wang, Xueshuo Xie, Yaozheng Fang, Ye Lu, Tao Li, Guiling Wang"
publisher = "Machine Learning for Cyber Security (ML4CS 2020)"
publisher_site = "https://link.springer.com/book/10.1007/978-3-030-62223-7"
cite_text = "Wang, J., Xie, X., Fang, Y., Lu, Y., Li, T., Wang, G. (2020). Attribute Propagation Enhanced Community Detection Model for Bitcoin De-anonymizing. In: Chen, X., Yan, H., Yan, Q., Zhang, X. (eds) Machine Learning for Cyber Security. ML4CS 2020. Lecture Notes in Computer Science(), vol 12486. Springer, Cham. https://doi.org/10.1007/978-3-030-62223-7_53"
bibtex = "@inproceedings{wang2020attribute,\n  title={Attribute Propagation Enhanced Community Detection Model for Bitcoin De-anonymizing},\n  author={Wang, Jiming and Xie, Xueshuo and Fang, Yaozheng and Lu, Ye and Li, Tao and Wang, Guiling},\n  booktitle={Machine Learning for Cyber Security: Third International Conference, ML4CS 2020, Guangzhou, China, October 8--10, 2020, Proceedings, Part I 3},\n  pages={607--622},\n  year={2020},\n  organization={Springer}\n}"
online_site = "https://link.springer.com/chapter/10.1007/978-3-030-62223-7_53"
abstract = "Bitcoin is a kind of decentralized cryptocurrency on a peer-to-peer network. Anonymity makes Bitcoin widely used in online payment but it is a disadvantage for regulatory purposes. We aim to de-anonymize Bitcoin to assist regulation. Many previous studies have used heuristic clustering or machine learning to analyze historical transactions and identify user behaviors. However, the accuracy of user identification is not ideal. Heuristic clustering only uses the topological structure of the transaction graph and ignores many transaction information, and supervised machine learning methods are limited by the size of labeled datasets. To identify user behaviors, we propose a community detection model based on attribute propagation, combining the topological structure of the transaction graph and additional transaction information. We first parse the transaction data of public ledger and construct a bipartite graph to describe correlations between addresses and transactions. We also extract address attributes from historical transactions to construct an attributed graph with the previous bipartite graph. Then, we design an adaptive weighted attribute propagation algorithm named AWAP running on the attributed graph to classify bitcoin addresses, and further identify user behaviors. Extensive experiments highlight that the proposed detection model based on AWAP achieves 5% higher accuracy on average compared to state-of-the-art address classification methods in Bitcoin. AWAP also achieves 25% higher F-score on average compared to previous community detection algorithms on two datasets."
pdf_name = "/pdf/ml4cs.pdf" 
year = "2020"